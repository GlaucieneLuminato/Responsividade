Responsividade e @media em SCSS: Criando sites adaptáveis
Responsividade em design web significa que um site se ajusta automaticamente para se adaptar a diferentes tamanhos de tela, desde smartphones até desktops. Isso garante uma experiência de usuário consistente e agradável em qualquer dispositivo.
@media é uma funcionalidade do CSS que permite aplicar estilos diferentes dependendo de características específicas do dispositivo, como largura da tela, orientação (retrato ou paisagem) e tipo de mídia (impressão, tela, etc.). Em SCSS, essa funcionalidade é ainda mais poderosa, pois permite uma sintaxe mais concisa e organizada.
Como funciona o @media em SCSS?
 * Criando regras: Você define regras de estilo dentro de um bloco @media.
 * Condições: Essas regras são aplicadas apenas quando a condição especificada dentro do @media é verdadeira.
 * Exemplo:
.container {
  width: 80%;
  @media (max-width: 768px) {
    width: 100%;
  }
}

Neste exemplo:
 * A classe container tem 80% de largura em telas maiores.
 * Em telas com largura máxima de 768px (dispositivos móveis), a largura da container se ajusta para 100%.
Por que usar @media em SCSS para responsividade?
 * Organização: Agrupa as regras de estilo específicas para cada tipo de tela, tornando o código mais fácil de entender e manter.
 * Reutilização: Crie mixins para estilos comuns em diferentes tamanhos de tela.
 * Flexibilidade: Permite criar layouts complexos e adaptáveis a diversos dispositivos.
 * Eficiência: Evita a repetição de código e melhora o desempenho.
Exemplo prático: Criando um grid responsivo
@mixin grid-column($columns: 12) {
  width: 100%;
  float: left;
  padding: 10px;
  @for $i from 1 through $columns {
    &--#{$i} {
      width: percentage($i / $columns);
    }
  }
}

.row {
  display: flex;
  flex-wrap: wrap;
  margin-left: -10px;
  margin-right: -10px;
}

.column {
  @include grid-column();
}

@media (max-width: 768px) {
  .column {
    @include grid-column(6); // Reduz o número de colunas para dispositivos menores
  }
}

Outros exemplos de uso de @media:
 * Fontes: Ajustar o tamanho da fonte para diferentes tamanhos de tela.
 * Espaçamentos: Aumentar ou diminuir os espaçamentos entre elementos.
 * Imagens: Alterar o tamanho das imagens ou a exibição (responsiva ou não).
 * Layouts: Mudar completamente o layout para dispositivos menores.
Em resumo:
O @media em SCSS é uma ferramenta essencial para criar sites responsivos e garantir uma ótima experiência do usuário em qualquer dispositivo. Ao dominar essa técnica, você poderá criar layouts flexíveis e adaptáveis, otimizando seus projetos para diferentes telas e resoluções.
Gostaria de ver mais exemplos ou tem alguma outra pergunta sobre responsividade e @media em SCSS?
